TECHNIQUE TO MAKE A WEBPAGE ADJUST ITS LAYOUT AND STYLE TO ANY POSSIBLE SCREEN SIZE (WINDOW OR VIEWPORT SIZE)

THERE ARE 4 BIG INGREDIENTS TO RESPONSIVE DESIGNS:

1. FLUID LAYOUTS

ALLOWS WEBPAGE TO ADAPT TO CURRENT VIEWPORT WIDTH (OR EVEN HEIGHT)
USE % (or vh/vw) UNIT INSTEAD OF px FOR ELEMENTS THAT SHOULD ADAPT TO VIEWPORT (USUALLY LAYOUT)

USE MAX-WIDTH INSTEAD OF WIDTH

========================================================================

2. RESPONSIVE UNITS

USE REM INSTEAD OF px FOR MOST LENGTHS

TO MAKE IT EASY TO SCALE THE ENTIRE LAYOUT DOWN (OR UP) AUTOMATICALLY

HELPFUL TRICK: SETTING 1rem TO 10px FOR EASY CALCULATIONS

===================================================================================

3. FLEXIBLE IMAGES

BY DEFAULT, IMAGES DON'T SCALE AUTOMATICALLY AS WE CHANGE THE VIEWPORT, SO WE NEED TO FIX THAT

ALWAYS USE % FOR IMAGE DIMENSIONS, TOGETHER WITH THE MAX-WIDTH PROPERTY

===================================================================================

4. MEDIA QUERIES

TO CHANGE CSS STYLES ON CERTAIN VIEWPORT WIDTHS (CALLED BREAKPOINTS)

THEY ARE COMPLETELY USELESS ON THEIR OWN. WE MUST CREATE FLUID LAYOUTS FROM THE BEGINNING. SAME IS TRUE
FOR RESPONSIVE UNITS AND FLEXIBLE IMAGES.

WE USUALLY WRITE MEDIA QUERIES ONLY AT THE END OF BUILDING A CERTAIN PAGE OR A CERTAIN COMPONENT

================================================================

DESKTOP-FIRST VS. MOBILE FIRST DEVELOPMENT

DESKTOP-FIRST: START WRITING CSS FOR THE DESKTOP: LARGE SCREEN
			   THEN, MEDIA QUERIES SHRINK DESIGN TO SMALLER SCREENS



MOBILE-FIRST: START WRITING CSS FOR MOBILE DEVICES: SMALL SCREEN
			  THEN, MEDIA QUERIES EXPAND DESIGN TO A LARGE SCREEN
			  FORCES US TO REDUCE WEBSITES AND APPS TO THE ABSOLUTE ESSENTIALS







